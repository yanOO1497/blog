{"title":"JS 数字字符串排序优化","date":"2020-05-24T07:20:41.000Z","link":"post/quick-sort","tags":["javascript"],"updated":"2021-06-12T10:38:30.365Z","content":"<p>JS 内的数据排序是非常常见的需求，大部分情况下的字符串比较会使用直接对比、<code>localCompare</code> 等方式比较，但是在数据量大的情况下往往不理想。</p>\n<p>使用 <code>Intl.Collator</code> 构建对比函数将会获得更加优异的性能效果。</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = [<span class=\"string\">'Offenbach'</span>, <span class=\"string\">'Österreich'</span>, <span class=\"string\">'Odenwald'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> collator = <span class=\"keyword\">new</span> <span class=\"built_in\">Intl</span>.Collator(<span class=\"string\">'de-u-co-phonebk'</span>);</span><br><span class=\"line\">a.sort(collator.compare);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.join(<span class=\"string\">', '</span>));</span><br><span class=\"line\"><span class=\"comment\">// → \"Odenwald, Österreich, Offenbach\"</span></span><br></pre></td></tr></table></div></figure>\n\n","prev":{"title":"module.exports 与 exports 的区别（极简）","link":"post/20-08-16-exports"},"next":{"title":"JS Tips 快速总结","link":"post/js -tips"},"plink":"https://yanoo1497.github.io/post/quick-sort/"}