{"title":"node中获取正在运行的全部进程数据","date":"2018-12-16T06:32:22.000Z","link":"post/node2","tags":["javascript","node"],"updated":"2021-06-12T10:38:30.377Z","content":"<p>问题分析：<br>本质上，这并不是一个关于 node api 的使用。这个问题解决的关键在于，你需要知道使用你当前系统下的命令行工具，需要运行什么命令可以查询系统的全部进程数据，node 只是提供了一个可以运行这样命令的接口罢了。了解了这一点后，问题就很好解决了。</p>\n<p>所以这个问题的第一步是需要知道当前系统该如何查看进程信息，这边系统是 windows ，windows 在命令行中执行 tasklist 可以查看进程信息。</p>\n<p>在知道如何查看后，需要结合 node ，我们需要用 node 中的子进程来执行命令，这边使用 exce<br>详细代码如下：</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ecxe = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>);</span><br><span class=\"line\">exec(<span class=\"string\">'tasklist'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, stdout, stderr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(error) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.error(<span class=\"string\">'error: '</span> + error);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'stdout: '</span> + stdout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'stderr: '</span> + <span class=\"keyword\">typeof</span> stderr);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></div></figure>\n\n<p>至于其他系统方法类似，只是命令不同罢了。更详细的进程数据分析需要另外再做处理。</p>\n","prev":{"title":"无重复字符的最长子串","link":"post/Longest-Substring-Without-Repeating-Characters"},"next":{"title":"chokidar API","link":"post/chokidar"},"plink":"https://yanoo1497.github.io/post/node2/"}