{"title":"Canvas 开发经验记录","date":"2021-06-07T06:32:22.000Z","link":"post/2021-canvas-tips","tags":["canvas"],"categories":["canvas"],"updated":"2021-06-12T10:38:30.367Z","content":"<p>使用 Canvas 也有一段时间了，也算是 get 到了一点点开发过程中的小经验小总结，特此记录。</p>\n<ol>\n<li>在绘制一些重复图形时，可以利用 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Path2D\" target=\"_blank\" rel=\"noopener\">Path2D</a> 来<strong>缓存已经绘制好的图形，实现快速的复制、移动、形变</strong>等等。</li>\n</ol>\n<p>使用示例：</p>\n<p>曲线、图表的循环模式，可以在绘制完曲线后，将缓存平移后再绘制，示例如下：（请注意，变量名都是根据实际用途取的，一些初始化等等没有记录在内，可以根据名字便知是什么，看看思想即可。）</p>\n<figure class=\"highlight ts\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> curveCache = <span class=\"keyword\">new</span> Path2D();</span><br><span class=\"line\">curveCache.moveTo(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">curveCache.lineTo(<span class=\"number\">100</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"comment\">// ... 此处省略一系列绘制操作</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算整段曲线长度</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> w = endPoint.x - startPoint.x;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算需要循环绘制次数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loop = <span class=\"built_in\">Math</span>.ceil((viewWidth - endPoint.x) / w);</span><br><span class=\"line\"><span class=\"keyword\">const</span> m = createMatrix();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> curvePath = <span class=\"keyword\">new</span> Path2D();</span><br><span class=\"line\"><span class=\"comment\">// ... 省略初始点绘制移动</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; loop; i++) &#123;</span><br><span class=\"line\">    curvePath.moveTo(startPoint.x - w * i, startPoint.y);</span><br><span class=\"line\">    m.translateSelf(-w, <span class=\"number\">0</span>);</span><br><span class=\"line\">    curvePath.lineTo(startPoint.x - w * i, endPoint.y);</span><br><span class=\"line\">    <span class=\"comment\">// 按照一定的形变规则，添加到新的绘制存储内部</span></span><br><span class=\"line\">    curvePath.addPath(<span class=\"keyword\">this</span>.curveCache, m);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ctx.stroke(curvePath);</span><br></pre></td></tr></table></div></figure>\n\n<ol start=\"2\">\n<li>当场景内绘制图形比较简单单一时，选中操作可以使用像素值对比来快速判断。</li>\n</ol>\n<figure class=\"highlight ts\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> imageData = ctx.getImageData(x, y, rectWidth);</span><br><span class=\"line\"><span class=\"comment\">// 空白像素值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> UINT8_COLOR_DEFAULT = <span class=\"built_in\">Array</span>(<span class=\"number\">4</span> * PIXEL_RANGE * PIXEL_RANGE)</span><br><span class=\"line\">    .fill(<span class=\"number\">0</span>)</span><br><span class=\"line\">    .toString();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (imageData !== UINT8_COLOR_DEFAULT) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO 点中像素</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>… 未待完续</p>\n","prev":{"title":"Canvas 绘制 iconfont 图标","link":"post/canvas-iconfont"},"next":{"title":"Vue 踩坑记录与经验分享记录","link":"post/vue"},"plink":"https://yanoo1497.github.io/post/2021-canvas-tips/"}