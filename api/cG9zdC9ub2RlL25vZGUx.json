{"title":"node/node1","date":"2019-03-30T05:15:01.605Z","link":"post/node/node1","updated":"2019-03-30T05:15:01.606Z","content":"<h1 id=\"node中对路径分隔符的兼容性处理\">node中对路径分隔符的兼容性处理<a href=\"post/node/node1#node中对路径分隔符的兼容性处理\"></a></h1><p>在编写node程序的时候，经常会遇到的问题是path.resolve或者relative方法返回的结果在linux和windows下不一样。linux返回的路径分隔符是左斜杠（/），而windows返回的路径分隔符是右斜杠（\\）。</p>\n<p>大部分情况下，我们不需要做额外的处理，各自维护自己的路径格式即可，程序本身不需要关心返回的路径格式。但是在调用一些其他模块的时候，可能会遇到这样的问题。</p>\n<p>分隔符本来也不是什么大问题，但肯定不是简单的字符串替换能解决的。比如，我们需要将windows下拿到的路径转换成linux下的路径。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\\\desktop\\\\dev\\\\workspace\\\\k2\\\\seed\\\\seed.js</span><br></pre></td></tr></table></div></figure>\n\n<p>第一反应是使用replace来解决，但比较推荐的方式是使用path.sep来代替正则的匹配，主要作用是保证代码兼容性的同时也增加代码的可读性，不需要考虑系统版本。</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;D:\\\\desktop\\\\dev\\\\workspace\\\\k2\\\\seed\\\\seed.js&apos;.split(path.sep).join(&apos;/&apos;);</span><br></pre></td></tr></table></div></figure>","prev":{"title":"node中获取正在运行的全部进程数据","link":"post/node/node2"},"next":{"title":"js性能优化注意事项","link":"post/js/performance/js1"},"plink":"https://github.com/yanOO1497/post/node/node1/","toc":[{"title":"node中对路径分隔符的兼容性处理","id":"node中对路径分隔符的兼容性处理","index":"1"}]}